{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\geber\\\\OneDrive\\\\Documents\\\\aHotelManagementSystem\\\\client\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { authService } from '../services/api';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const isAuthenticated = !!user;\n\n  // Check if user is already logged in on app start\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const cached = localStorage.getItem('user');\n        if (cached) {\n          try {\n            setUser(JSON.parse(cached));\n          } catch {}\n        }\n        if (token) {\n          try {\n            const userData = await authService.getProfile();\n            setUser(userData);\n            localStorage.setItem('user', JSON.stringify(userData));\n          } catch (e) {\n            // ignore and rely on cached\n          }\n        }\n      } catch (error) {\n        // Token is invalid, remove it\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    checkAuth();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      setIsLoading(true);\n      const response = await authService.login({\n        email,\n        password\n      });\n      if (response.token && response.user) {\n        localStorage.setItem('token', response.token);\n        localStorage.setItem('user', JSON.stringify(response.user));\n        setUser(response.user);\n        toast.success('Login successful!');\n      } else {\n        throw new Error('Invalid response from server');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message || 'Login failed';\n      toast.error(errorMessage);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const logout = async () => {\n    try {\n      await authService.logout();\n    } catch (error) {\n      // Even if logout fails on server, clear local state\n      console.error('Logout error:', error);\n    } finally {\n      setUser(null);\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      toast.success('Logged out successfully');\n    }\n  };\n  const updateProfile = async profileData => {\n    try {\n      const updatedUser = await authService.updateProfile(profileData);\n      setUser(updatedUser);\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n      toast.success('Profile updated successfully');\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message || 'Profile update failed';\n      toast.error(errorMessage);\n      throw error;\n    }\n  };\n  const refreshUser = async () => {\n    try {\n      const userData = await authService.getProfile();\n      setUser(userData);\n      localStorage.setItem('user', JSON.stringify(userData));\n    } catch (error) {\n      // If refresh fails, user might be logged out\n      setUser(null);\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n    }\n  };\n  const value = {\n    user,\n    isAuthenticated,\n    isLoading,\n    login,\n    logout,\n    updateProfile,\n    refreshUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"YajQB7LURzRD+QP5gw0+K2TZIWA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","authService","toast","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","isLoading","setIsLoading","isAuthenticated","checkAuth","token","localStorage","getItem","cached","JSON","parse","userData","getProfile","setItem","stringify","e","error","removeItem","login","email","password","response","success","_error$response","_error$response$data","errorMessage","data","message","logout","console","updateProfile","profileData","updatedUser","_error$response2","_error$response2$data","refreshUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/geber/OneDrive/Documents/aHotelManagementSystem/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { authService } from '../services/api';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst AuthContext = createContext(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const isAuthenticated = !!user;\r\n\r\n  // Check if user is already logged in on app start\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const cached = localStorage.getItem('user');\r\n        if (cached) {\r\n          try { setUser(JSON.parse(cached)); } catch {}\r\n        }\r\n        if (token) {\r\n          try {\r\n            const userData = await authService.getProfile();\r\n            setUser(userData);\r\n            localStorage.setItem('user', JSON.stringify(userData));\r\n          } catch (e) {\r\n            // ignore and rely on cached\r\n          }\r\n        }\r\n      } catch (error) {\r\n        // Token is invalid, remove it\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await authService.login({ email, password });\r\n      \r\n      if (response.token && response.user) {\r\n        localStorage.setItem('token', response.token);\r\n        localStorage.setItem('user', JSON.stringify(response.user));\r\n        setUser(response.user);\r\n        toast.success('Login successful!');\r\n      } else {\r\n        throw new Error('Invalid response from server');\r\n      }\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.message || error.message || 'Login failed';\r\n      toast.error(errorMessage);\r\n      throw error;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await authService.logout();\r\n    } catch (error) {\r\n      // Even if logout fails on server, clear local state\r\n      console.error('Logout error:', error);\r\n    } finally {\r\n      setUser(null);\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      toast.success('Logged out successfully');\r\n    }\r\n  };\r\n\r\n  const updateProfile = async (profileData) => {\r\n    try {\r\n      const updatedUser = await authService.updateProfile(profileData);\r\n      setUser(updatedUser);\r\n      localStorage.setItem('user', JSON.stringify(updatedUser));\r\n      toast.success('Profile updated successfully');\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.message || error.message || 'Profile update failed';\r\n      toast.error(errorMessage);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const refreshUser = async () => {\r\n    try {\r\n      const userData = await authService.getProfile();\r\n      setUser(userData);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n    } catch (error) {\r\n      // If refresh fails, user might be logged out\r\n      setUser(null);\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    isAuthenticated,\r\n    isLoading,\r\n    login,\r\n    logout,\r\n    updateProfile,\r\n    refreshUser,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}