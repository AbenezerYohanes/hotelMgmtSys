{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth service\nconst normalizeUser = raw => {\n  if (!raw) return null;\n  const userData = raw.data ? raw.data : raw; // some endpoints wrap data\n  return {\n    id: userData.id,\n    username: userData.username,\n    email: userData.email,\n    firstName: userData.first_name,\n    lastName: userData.last_name,\n    role: userData.role,\n    phone: userData.phone,\n    address: userData.address,\n    createdAt: userData.created_at\n  };\n};\nexport const authService = {\n  login: async credentials => {\n    var _payload$data, _payload$data2;\n    const response = await api.post('/auth/login', credentials);\n    const payload = response.data;\n    const token = (payload === null || payload === void 0 ? void 0 : (_payload$data = payload.data) === null || _payload$data === void 0 ? void 0 : _payload$data.token) || (payload === null || payload === void 0 ? void 0 : payload.token);\n    const user = normalizeUser((payload === null || payload === void 0 ? void 0 : (_payload$data2 = payload.data) === null || _payload$data2 === void 0 ? void 0 : _payload$data2.user) || (payload === null || payload === void 0 ? void 0 : payload.user));\n    return {\n      token,\n      user\n    };\n  },\n  register: async registrationData => {\n    var _payload$data3, _payload$data4;\n    const response = await api.post('/auth/register', registrationData);\n    const payload = response.data;\n    const token = (payload === null || payload === void 0 ? void 0 : (_payload$data3 = payload.data) === null || _payload$data3 === void 0 ? void 0 : _payload$data3.token) || (payload === null || payload === void 0 ? void 0 : payload.token);\n    const user = normalizeUser((payload === null || payload === void 0 ? void 0 : (_payload$data4 = payload.data) === null || _payload$data4 === void 0 ? void 0 : _payload$data4.user) || (payload === null || payload === void 0 ? void 0 : payload.user));\n    return {\n      token,\n      user\n    };\n  },\n  logout: async () => {\n    // server may not have explicit logout; clear client state regardless\n    try {\n      await api.post('/auth/logout');\n    } catch (e) {\n      // ignore\n    }\n    return {\n      success: true\n    };\n  },\n  getProfile: async () => {\n    const response = await api.get('/auth/profile');\n    return normalizeUser(response.data);\n  },\n  updateProfile: async profileData => {\n    const response = await api.put('/auth/profile', profileData);\n    return normalizeUser(response.data);\n  }\n};\n\n// Users service\nexport const usersService = {\n  getUsers: async () => {\n    const response = await api.get('/users');\n    return response.data;\n  },\n  getUser: async id => {\n    const response = await api.get(`/users/${id}`);\n    return response.data;\n  },\n  createUser: async userData => {\n    const response = await api.post('/users', userData);\n    return response.data;\n  },\n  updateUser: async (id, userData) => {\n    const response = await api.put(`/users/${id}`, userData);\n    return response.data;\n  },\n  deleteUser: async id => {\n    const response = await api.delete(`/users/${id}`);\n    return response.data;\n  }\n};\n\n// Bookings service\nexport const bookingsService = {\n  getBookings: async () => {\n    const response = await api.get('/bookings');\n    return response.data;\n  },\n  getBooking: async id => {\n    const response = await api.get(`/bookings/${id}`);\n    return response.data;\n  },\n  createBooking: async bookingData => {\n    const response = await api.post('/bookings', bookingData);\n    return response.data;\n  },\n  updateBooking: async (id, bookingData) => {\n    const response = await api.put(`/bookings/${id}`, bookingData);\n    return response.data;\n  },\n  deleteBooking: async id => {\n    const response = await api.delete(`/bookings/${id}`);\n    return response.data;\n  }\n};\n\n// Rooms service\nexport const roomsService = {\n  getRooms: async () => {\n    const response = await api.get('/rooms');\n    return response.data;\n  },\n  getRoom: async id => {\n    const response = await api.get(`/rooms/${id}`);\n    return response.data;\n  },\n  createRoom: async roomData => {\n    const response = await api.post('/rooms', roomData);\n    return response.data;\n  },\n  updateRoom: async (id, roomData) => {\n    const response = await api.put(`/rooms/${id}`, roomData);\n    return response.data;\n  },\n  deleteRoom: async id => {\n    const response = await api.delete(`/rooms/${id}`);\n    return response.data;\n  }\n};\n\n// Guests service\nexport const guestsService = {\n  getGuests: async () => {\n    const response = await api.get('/guests');\n    return response.data;\n  },\n  getGuest: async id => {\n    const response = await api.get(`/guests/${id}`);\n    return response.data;\n  },\n  createGuest: async guestData => {\n    const response = await api.post('/guests', guestData);\n    return response.data;\n  },\n  updateGuest: async (id, guestData) => {\n    const response = await api.put(`/guests/${id}`, guestData);\n    return response.data;\n  },\n  deleteGuest: async id => {\n    const response = await api.delete(`/guests/${id}`);\n    return response.data;\n  }\n};\n\n// HR service\nexport const hrService = {\n  getEmployees: async () => {\n    const response = await api.get('/hr/employees');\n    return response.data;\n  },\n  getEmployee: async id => {\n    const response = await api.get(`/hr/employees/${id}`);\n    return response.data;\n  },\n  createEmployee: async employeeData => {\n    const response = await api.post('/hr/employees', employeeData);\n    return response.data;\n  },\n  updateEmployee: async (id, employeeData) => {\n    const response = await api.put(`/hr/employees/${id}`, employeeData);\n    return response.data;\n  },\n  deleteEmployee: async id => {\n    const response = await api.delete(`/hr/employees/${id}`);\n    return response.data;\n  },\n  getDepartments: async () => {\n    const response = await api.get('/hr/departments');\n    return response.data;\n  }\n};\n\n// Payments service\nexport const paymentsService = {\n  getPayments: async () => {\n    const response = await api.get('/payments');\n    return response.data;\n  },\n  getPayment: async id => {\n    const response = await api.get(`/payments/${id}`);\n    return response.data;\n  },\n  createPayment: async paymentData => {\n    const response = await api.post('/payments', paymentData);\n    return response.data;\n  },\n  updatePayment: async (id, paymentData) => {\n    const response = await api.put(`/payments/${id}`, paymentData);\n    return response.data;\n  },\n  deletePayment: async id => {\n    const response = await api.delete(`/payments/${id}`);\n    return response.data;\n  }\n};\n\n// Reports service\nexport const reportsService = {\n  getDashboardStats: async () => {\n    const response = await api.get('/reports/dashboard');\n    return response.data;\n  },\n  getBookingStats: async period => {\n    const response = await api.get(`/reports/bookings?period=${period}`);\n    return response.data;\n  },\n  getRevenueStats: async period => {\n    const response = await api.get(`/reports/revenue?period=${period}`);\n    return response.data;\n  },\n  getOccupancyStats: async period => {\n    const response = await api.get(`/reports/occupancy?period=${period}`);\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","normalizeUser","raw","userData","data","id","username","email","firstName","first_name","lastName","last_name","role","phone","address","createdAt","created_at","authService","login","credentials","_payload$data","_payload$data2","post","payload","user","register","registrationData","_payload$data3","_payload$data4","logout","e","success","getProfile","get","updateProfile","profileData","put","usersService","getUsers","getUser","createUser","updateUser","deleteUser","delete","bookingsService","getBookings","getBooking","createBooking","bookingData","updateBooking","deleteBooking","roomsService","getRooms","getRoom","createRoom","roomData","updateRoom","deleteRoom","guestsService","getGuests","getGuest","createGuest","guestData","updateGuest","deleteGuest","hrService","getEmployees","getEmployee","createEmployee","employeeData","updateEmployee","deleteEmployee","getDepartments","paymentsService","getPayments","getPayment","createPayment","paymentData","updatePayment","deletePayment","reportsService","getDashboardStats","getBookingStats","period","getRevenueStats","getOccupancyStats"],"sources":["C:/Users/geber/OneDrive/Documents/aHotelManagementSystem/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor to handle auth errors\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth service\r\nconst normalizeUser = (raw) => {\r\n  if (!raw) return null;\r\n  const userData = raw.data ? raw.data : raw; // some endpoints wrap data\r\n  return {\r\n    id: userData.id,\r\n    username: userData.username,\r\n    email: userData.email,\r\n    firstName: userData.first_name,\r\n    lastName: userData.last_name,\r\n    role: userData.role,\r\n    phone: userData.phone,\r\n    address: userData.address,\r\n    createdAt: userData.created_at,\r\n  };\r\n};\r\n\r\nexport const authService = {\r\n  login: async (credentials) => {\r\n    const response = await api.post('/auth/login', credentials);\r\n    const payload = response.data;\r\n    const token = payload?.data?.token || payload?.token;\r\n    const user = normalizeUser(payload?.data?.user || payload?.user);\r\n    return { token, user };\r\n  },\r\n\r\n  register: async (registrationData) => {\r\n    const response = await api.post('/auth/register', registrationData);\r\n    const payload = response.data;\r\n    const token = payload?.data?.token || payload?.token;\r\n    const user = normalizeUser(payload?.data?.user || payload?.user);\r\n    return { token, user };\r\n  },\r\n\r\n  logout: async () => {\r\n    // server may not have explicit logout; clear client state regardless\r\n    try {\r\n      await api.post('/auth/logout');\r\n    } catch (e) {\r\n      // ignore\r\n    }\r\n    return { success: true };\r\n  },\r\n\r\n  getProfile: async () => {\r\n    const response = await api.get('/auth/profile');\r\n    return normalizeUser(response.data);\r\n  },\r\n\r\n  updateProfile: async (profileData) => {\r\n    const response = await api.put('/auth/profile', profileData);\r\n    return normalizeUser(response.data);\r\n  },\r\n};\r\n\r\n// Users service\r\nexport const usersService = {\r\n  getUsers: async () => {\r\n    const response = await api.get('/users');\r\n    return response.data;\r\n  },\r\n\r\n  getUser: async (id) => {\r\n    const response = await api.get(`/users/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  createUser: async (userData) => {\r\n    const response = await api.post('/users', userData);\r\n    return response.data;\r\n  },\r\n\r\n  updateUser: async (id, userData) => {\r\n    const response = await api.put(`/users/${id}`, userData);\r\n    return response.data;\r\n  },\r\n\r\n  deleteUser: async (id) => {\r\n    const response = await api.delete(`/users/${id}`);\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// Bookings service\r\nexport const bookingsService = {\r\n  getBookings: async () => {\r\n    const response = await api.get('/bookings');\r\n    return response.data;\r\n  },\r\n\r\n  getBooking: async (id) => {\r\n    const response = await api.get(`/bookings/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  createBooking: async (bookingData) => {\r\n    const response = await api.post('/bookings', bookingData);\r\n    return response.data;\r\n  },\r\n\r\n  updateBooking: async (id, bookingData) => {\r\n    const response = await api.put(`/bookings/${id}`, bookingData);\r\n    return response.data;\r\n  },\r\n\r\n  deleteBooking: async (id) => {\r\n    const response = await api.delete(`/bookings/${id}`);\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// Rooms service\r\nexport const roomsService = {\r\n  getRooms: async () => {\r\n    const response = await api.get('/rooms');\r\n    return response.data;\r\n  },\r\n\r\n  getRoom: async (id) => {\r\n    const response = await api.get(`/rooms/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  createRoom: async (roomData) => {\r\n    const response = await api.post('/rooms', roomData);\r\n    return response.data;\r\n  },\r\n\r\n  updateRoom: async (id, roomData) => {\r\n    const response = await api.put(`/rooms/${id}`, roomData);\r\n    return response.data;\r\n  },\r\n\r\n  deleteRoom: async (id) => {\r\n    const response = await api.delete(`/rooms/${id}`);\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// Guests service\r\nexport const guestsService = {\r\n  getGuests: async () => {\r\n    const response = await api.get('/guests');\r\n    return response.data;\r\n  },\r\n\r\n  getGuest: async (id) => {\r\n    const response = await api.get(`/guests/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  createGuest: async (guestData) => {\r\n    const response = await api.post('/guests', guestData);\r\n    return response.data;\r\n  },\r\n\r\n  updateGuest: async (id, guestData) => {\r\n    const response = await api.put(`/guests/${id}`, guestData);\r\n    return response.data;\r\n  },\r\n\r\n  deleteGuest: async (id) => {\r\n    const response = await api.delete(`/guests/${id}`);\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// HR service\r\nexport const hrService = {\r\n  getEmployees: async () => {\r\n    const response = await api.get('/hr/employees');\r\n    return response.data;\r\n  },\r\n\r\n  getEmployee: async (id) => {\r\n    const response = await api.get(`/hr/employees/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  createEmployee: async (employeeData) => {\r\n    const response = await api.post('/hr/employees', employeeData);\r\n    return response.data;\r\n  },\r\n\r\n  updateEmployee: async (id, employeeData) => {\r\n    const response = await api.put(`/hr/employees/${id}`, employeeData);\r\n    return response.data;\r\n  },\r\n\r\n  deleteEmployee: async (id) => {\r\n    const response = await api.delete(`/hr/employees/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  getDepartments: async () => {\r\n    const response = await api.get('/hr/departments');\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// Payments service\r\nexport const paymentsService = {\r\n  getPayments: async () => {\r\n    const response = await api.get('/payments');\r\n    return response.data;\r\n  },\r\n\r\n  getPayment: async (id) => {\r\n    const response = await api.get(`/payments/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  createPayment: async (paymentData) => {\r\n    const response = await api.post('/payments', paymentData);\r\n    return response.data;\r\n  },\r\n\r\n  updatePayment: async (id, paymentData) => {\r\n    const response = await api.put(`/payments/${id}`, paymentData);\r\n    return response.data;\r\n  },\r\n\r\n  deletePayment: async (id) => {\r\n    const response = await api.delete(`/payments/${id}`);\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// Reports service\r\nexport const reportsService = {\r\n  getDashboardStats: async () => {\r\n    const response = await api.get('/reports/dashboard');\r\n    return response.data;\r\n  },\r\n\r\n  getBookingStats: async (period) => {\r\n    const response = await api.get(`/reports/bookings?period=${period}`);\r\n    return response.data;\r\n  },\r\n\r\n  getRevenueStats: async (period) => {\r\n    const response = await api.get(`/reports/revenue?period=${period}`);\r\n    return response.data;\r\n  },\r\n\r\n  getOccupancyStats: async (period) => {\r\n    const response = await api.get(`/reports/occupancy?period=${period}`);\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}